#include <ESP8266WiFi.h>
#include <PubSubClient.h>
#include <Servo.h>

const char* ssid = "SEU-WIFI";  
const char* password = "SUA_SENHA";  
const char* mqtt_server = "mqtt.thingspeak.com";  
const char* channel_id = "SEU_CHANNEL_ID";  
const char* write_api_key = "SUA_API_KEY";  

const int sensorPin = A0;  
const int servoPin = D1;  

WiFiClient espClient;
PubSubClient client(espClient);
Servo meuServo;

int sensorValue = 0;
int mediaSensor = 0;
int anguloServo = 90;

void setup_wifi() {
  delay(10);
  Serial.println("Conectando ao WiFi...");
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }

  Serial.println();
  Serial.println("WiFi conectado!");
  Serial.print("Endereço IP: ");
  Serial.println(WiFi.localIP());
}

void callback(char* topic, byte* payload, unsigned int length) {}

void reconnect() {
  while (!client.connected()) {
    Serial.print("Tentando conectar ao MQTT...");
    if (client.connect("ESP8266Client", write_api_key, "")) {
      Serial.println("Conectado ao MQTT!");
    } else {
      Serial.print("Falha ao conectar. Código de erro: ");
      Serial.println(client.state());
      delay(2000);
    }
  }
}

void setup() {
  Serial.begin(115200);
  setup_wifi();
  client.setServer(mqtt_server, 1883);
  client.setCallback(callback);

  meuServo.attach(servoPin);
  meuServo.write(anguloServo);
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  sensorValue = analogRead(sensorPin);
  mediaSensor = (mediaSensor * 9 + sensorValue) / 10;

  Serial.print("Valor do sensor: ");
  Serial.print(sensorValue);
  Serial.print(" | Média: ");
  Serial.println(mediaSensor);

  if (mediaSensor < 300) {
    anguloServo = 0;
    meuServo.write(anguloServo);
    Serial.println("Chuva detectada! Servo movido para 0 graus.");
  } else {
    anguloServo = 90;
    meuServo.write(anguloServo);
    Serial.println("Sem chuva. Servo retornado para 90 graus.");
  }

  String payload = "field1=" + String(mediaSensor);
  if (client.publish("channels/" + String(channel_id) + "/publish/" + String(write_api_key), payload.c_str())) {
    Serial.println("Dados enviados para o ThingSpeak com sucesso.");
  } else {
    Serial.println("Falha ao enviar dados para o ThingSpeak.");
  }

  delay(10000); 
}
